// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DSG.SpecFlow.Selenium.Demo.Tests.Products
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Products page", Description="\tIn order to...\r\n\tAs a..\r\n\tI want to...", SourceFile="Products\\Products.feature", SourceLine=0)]
    public partial class ProductsPageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Products.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Products page", "\tIn order to...\r\n\tAs a..\r\n\tI want to...", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting a category with sub-categories will show the sub-category dropdown", SourceLine=9)]
        public virtual void SelectingACategoryWithSub_CategoriesWillShowTheSub_CategoryDropdown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Selecting a category with sub-categories will show the sub-category dropdown", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I am on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("I select the \"Category with sub-categories\" category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("the sub-category dropdown should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown(string category_Name, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Selecting an empty category will NOT show the sub-category dropdown", exampleTags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I am on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When(string.Format("I select the \"{0}\" category", category_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("the sub-category dropdown should not be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting an empty category will NOT show the sub-category dropdown, Empty catego" +
            "ry one", SourceLine=22)]
        public virtual void SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown_EmptyCategoryOne()
        {
#line 16
this.SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown("Empty category one", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting an empty category will NOT show the sub-category dropdown, Empty catego" +
            "ry two", SourceLine=22)]
        public virtual void SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown_EmptyCategoryTwo()
        {
#line 16
this.SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown("Empty category two", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting an empty category will NOT show the sub-category dropdown, Empty catego" +
            "ry three", SourceLine=22)]
        public virtual void SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown_EmptyCategoryThree()
        {
#line 16
this.SelectingAnEmptyCategoryWillNOTShowTheSub_CategoryDropdown("Empty category three", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting a sub-category with products will show the product and sub-product drop" +
            "downs", SourceLine=30)]
        public virtual void SelectingASub_CategoryWithProductsWillShowTheProductAndSub_ProductDropdowns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Selecting a sub-category with products will show the product and sub-product drop" +
                    "downs", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("I am on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.When("I select the \"Category with sub-categories\" category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
  testRunner.And("I select the \"Sub-category with products and sub-products\" sub-category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.Then("the product dropdown should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
  testRunner.And("the sub-product dropdown should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns(string sub_Category_Name, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Selecting an empty sub-category will NOT show the product and sub-product dropdow" +
                    "ns", exampleTags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I am on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When("I select the \"Category with sub-categories\" category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
  testRunner.And(string.Format("I select the \"{0}\" sub-category", sub_Category_Name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("the product dropdown should not be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
  testRunner.And("the sub-product dropdown should not be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting an empty sub-category will NOT show the product and sub-product dropdow" +
            "ns, Empty sub-category one", SourceLine=47)]
        public virtual void SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns_EmptySub_CategoryOne()
        {
#line 39
this.SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns("Empty sub-category one", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting an empty sub-category will NOT show the product and sub-product dropdow" +
            "ns, Empty sub-category two", SourceLine=47)]
        public virtual void SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns_EmptySub_CategoryTwo()
        {
#line 39
this.SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns("Empty sub-category two", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Selecting an empty sub-category will NOT show the product and sub-product dropdow" +
            "ns, Empty sub-category three", SourceLine=47)]
        public virtual void SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns_EmptySub_CategoryThree()
        {
#line 39
this.SelectingAnEmptySub_CategoryWillNOTShowTheProductAndSub_ProductDropdowns("Empty sub-category three", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("After selecting a category with sub-categories, selecting an empty category will " +
            "hide the sub-category dropdown", SourceLine=55)]
        public virtual void AfterSelectingACategoryWithSub_CategoriesSelectingAnEmptyCategoryWillHideTheSub_CategoryDropdown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("After selecting a category with sub-categories, selecting an empty category will " +
                    "hide the sub-category dropdown", ((string[])(null)));
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
   testRunner.Given("I am on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.When("I select the \"Category with sub-categories\" category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
  testRunner.And("I select the \"Empty category one\" category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.Then("the sub-category dropdown should not be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("After selecting a sub-category with products, selecting an empty sub-category wil" +
            "l hide the product and sub-product dropdown", SourceLine=61)]
        public virtual void AfterSelectingASub_CategoryWithProductsSelectingAnEmptySub_CategoryWillHideTheProductAndSub_ProductDropdown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("After selecting a sub-category with products, selecting an empty sub-category wil" +
                    "l hide the product and sub-product dropdown", ((string[])(null)));
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
   testRunner.Given("I am on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.When("I select the \"Category with sub-categories\" category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
  testRunner.And("I select the \"Sub-category with products and sub-products\" sub-category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
  testRunner.And("I select the \"Empty sub-category one\" sub-category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.Then("the product dropdown should not be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
  testRunner.And("the sub-product dropdown should not be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
